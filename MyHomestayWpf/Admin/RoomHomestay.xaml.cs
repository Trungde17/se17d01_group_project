using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Controls;
using BusinessObjects.Models;
using DataAccessaLayers;
using System;
using System.Linq;

namespace MyHomestayWpf.Admin
{
    public partial class RoomHomestay : Window
    {
        public ObservableCollection<Room> Rooms { get; set; }
        private Room selectedRoom;

        public RoomHomestay()
        {
            InitializeComponent();
            Rooms = new ObservableCollection<Room>();
            dgData.ItemsSource = Rooms;
            LoadRooms();
        }

        private void LoadRooms()
        {
            try
            {
                var rooms = RoomDAO.Instance.GetRooms();
                foreach (var room in rooms)
                {
                    Rooms.Add(room);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error loading rooms: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void dgData_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (dgData.SelectedItem is Room room)
            {
                selectedRoom = room;
                DisplayRoomDetails(room);
            }
        }

        private void DisplayRoomDetails(Room room)
        {
            txtRoomName.Text = room.RoomName;
            txtDescription.Text = room.Description;
            txtPricePerNight.Text = room.PricePerNight.ToString();
            txtMaxOccupancy.Text = room.MaxOccupancy.ToString();
            chkIsAvailable.IsChecked = room.IsAvailable;
        }

        private void btnAdd_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                var newRoom = new Room
                {
                    RoomId = Rooms.Count + 1, // Ideally, this should be generated by the database
                    RoomName = txtRoomName.Text,
                    Description = txtDescription.Text,
                    PricePerNight = decimal.Parse(txtPricePerNight.Text),
                    MaxOccupancy = int.Parse(txtMaxOccupancy.Text),
                    IsAvailable = chkIsAvailable.IsChecked ?? false
                };
                Rooms.Add(newRoom);
                ClearForm();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error adding room: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void btnUpdate_Click(object sender, RoutedEventArgs e)
        {
            if (selectedRoom != null)
            {
                try
                {
                    selectedRoom.RoomName = txtRoomName.Text;
                    selectedRoom.Description = txtDescription.Text;
                    selectedRoom.PricePerNight = decimal.Parse(txtPricePerNight.Text);
                    selectedRoom.MaxOccupancy = int.Parse(txtMaxOccupancy.Text);
                    selectedRoom.IsAvailable = chkIsAvailable.IsChecked ?? false;
                    dgData.Items.Refresh();
                    ClearForm();
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Error updating room: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        private void btnDelete_Click(object sender, RoutedEventArgs e)
        {
            if (selectedRoom != null)
            {
                try
                {
                    Rooms.Remove(selectedRoom);
                    ClearForm();
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Error deleting room: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        private void btnBack_Click(object sender, RoutedEventArgs e)
        {
            AdminPage adminPage = new AdminPage();
            this.Close();
            adminPage.Show();
        }

       

        private void ClearForm()
        {
            txtRoomName.Text = string.Empty;
            txtDescription.Text = string.Empty;
            txtPricePerNight.Text = string.Empty;
            txtMaxOccupancy.Text = string.Empty;
            chkIsAvailable.IsChecked = false;
        }

      
    }
}
